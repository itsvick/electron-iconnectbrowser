name: GitHub Actions Demo
on: [push]
jobs:
  # build_on_ubuntu: 
  #   runs-on: ubuntu-latest
  #   steps:
  #     - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
  #     - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
  #     - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
  #     - name: Check out repository code
  #       uses: actions/checkout@v2
  #     - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
  #     - name: Install Node with version 14.x
  #       uses: actions/setup-node@master
  #       with:
  #         node-version: 14.19.0
  #     - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
  #     - name: Install dependencies
  #       run: npm install
  #     - name: Run build
  #       env:
  #         ELECTRON: true
  #         APP_VERSION_NUMBER: 0.0.1
  #       run: npm run electron:build
  #     - name: see dist directory
  #       run: ls ./dist
  #     - name: see release directory
  #       run: ls ./release/
  #     - uses: actions/upload-artifact@v2
  #       with: 
  #           name: Make Assets for download
  #           path: release/*.deb
  #     - run: echo "üçè This job's status is ${{ job.status }}."
  build_on_mac:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: 14.15.1
    - name: Install dependencies
      run: npm install
    - name: Run build
      env:
        ELECTRON: true
        APP_VERSION_NUMBER: 0.0.1
      run: npm run electron:build
    - name: see dist directory
      run: ls ./dist
    - name: see release directory
      run: ls ./release/
    - uses: actions/upload-artifact@v2
      with: 
        name: assets for download
        path: release/*.deb

#   build_on_win:
#     runs-on: windows-2019
#     steps:
#     - uses: actions/checkout@master
#     - uses: actions/setup-node@master
#       with:
#         node-version: 14
#         GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     # - name: install node tools
#     #   run: npm install --global --production windows-build-tools --vs2015
#     # - name: install node-gyp
#     #   run: npm install --global node-gyp@latest
#     # - name: Set node config to use python2.7
#     #   run: npm config set python python2.7
#     # - name: Set node config to set msvs_version to 2015
#     #   run: npm config set msvs_version 2015
#     # - name: Work around for Windows Server 2015
#       # run: set path=%path%;C:\Program Files (x86)\Microsoft Visual Studio\2015\Community\MSBuild\Current\Bin
#     - name: Install dependencies
#       run: npm install
#     # - name: Rebuild Packages
#     #   run: npm run rebuild
# #     - name: check env
# #       env:
# #         ELECTRON: true
# #         APP_VERSION_NUMBER: 0.0.1
# #       run: set
#     - name: Build on Windows
#       env:
#         ELECTRON: true
#         APP_VERSION_NUMBER: 0.0.1
#       run: npm run electron:build
#     - name: see dist directory
#       run: ls ./dist
#     - name: see release directory
#       run: ls ./release/
#     - uses: actions/upload-artifact@v2
#       with: 
#         name: assets for download
#         path: release/*.exe


    # - uses: lucy  io/upload-to-release@master
    #   with:
    #     name: lucyio/electron
    #     path: ./dist/win-unpacked
    #     action: unpublished 
    #     release_id: 0.0.1
    #     release-repo: lucyio/electron